
package RentACarRESTGenRentACarRESTRESTAzure.uiModels.DTOA;

import RentACarRESTGenRentACarRESTRESTAzure.uiModels.DTO.*;
import RentACarRESTGenRentACarRESTRESTAzure.uiModels.DTO.utils.*;
import RentACarRESTGenRentACarRESTRESTAzure.uiModels.DTO.enumerations.*;

import java.util.ArrayList;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 * Code autogenerated. Do not modify this file.
 */
public class FacturaDTOA extends DTOA
{
	// region - Members, getters and setters

	private Integer id;
	public Integer getId () { return id; }
	public void setId (Integer id) { this.id = id; }

	
	private java.util.Date fecha;
	public java.util.Date getFecha () { return fecha; }
	public void setFecha (java.util.Date fecha) { this.fecha = fecha; }
	
	private Boolean esPagada;
	public Boolean getEsPagada () { return esPagada; }
	public void setEsPagada (Boolean esPagada) { this.esPagada = esPagada; }
	
	private Boolean esAnulada;
	public Boolean getEsAnulada () { return esAnulada; }
	public void setEsAnulada (Boolean esAnulada) { this.esAnulada = esAnulada; }
	
	
	/* Rol: Factura o--> LineaFactura */
	private ArrayList<LineaFacturaDTOA> lineas;
	public ArrayList<LineaFacturaDTOA> getLineas () { return lineas; }
	public void setLineas (ArrayList<LineaFacturaDTOA> lineas) { this.lineas = lineas; }

	
	/* ServiceLink: dameTotal */
	private Double dameTotal;
	public Double getDameTotal () { return dameTotal; }
	public void setDameTotal (Double dameTotal) { this.dameTotal = dameTotal; }

	
	// endregion
	
	
	
	// region - Constructor and JSON <-> DTOA <-> DTO
	
	public FacturaDTOA ()
	{
		// Empty constructor
	}
	
	@Override
	public void setFromJSON (JSONObject json)
	{
		try
		{
			if (!JSONObject.NULL.equals(json.opt("Id")))
			{
				this.id = (Integer) json.opt("Id");
			}
			

			if (!JSONObject.NULL.equals(json.opt("Fecha")))
			{
			 
			 	String stringDate = (String) json.opt("Fecha");
				this.fecha = DateUtils.stringToDateFormat(stringDate);
			 
			}

			if (!JSONObject.NULL.equals(json.opt("EsPagada")))
			{
			 
				this.esPagada = (Boolean) json.opt("EsPagada");
			 
			}

			if (!JSONObject.NULL.equals(json.opt("EsAnulada")))
			{
			 
				this.esAnulada = (Boolean) json.opt("EsAnulada");
			 
			}
			

			JSONArray arrayLineas = json.optJSONArray("Lineas");
			if (arrayLineas != null)
			{
				this.lineas = new ArrayList<LineaFacturaDTOA>();
				for (int i = 0; i < arrayLineas.length(); ++i)
				{
					JSONObject subJson = (JSONObject) arrayLineas.opt(i);
					LineaFacturaDTOA tmp = new LineaFacturaDTOA();
					tmp.setFromJSON(subJson);
					this.lineas.add(tmp);
				}
			}

			

			JSONObject jsonDameTotal = json.optJSONObject("DameTotal");
			if (jsonDameTotal != null)
			{
				FacturaDTOA tmp = new FacturaDTOA();
				tmp.setFromJSON(jsonDameTotal);
				this.dameTotal = tmp;
			}
		}
		catch (Exception e)
		{
			e.printStackTrace();
		}
	}
	
	public JSONObject toJSON ()
	{
		JSONObject json = new JSONObject();
		
		try
		{
			if (this.id != null){
				json.put("Id", this.id);
			}
			
		
		  if (this.fecha != null)
			json.put("Fecha", DateUtils.dateToFormatString(this.fecha));
		
		
		  if (this.esPagada != null)
			json.put("EsPagada", this.esPagada);
		
		
		  if (this.esAnulada != null)
			json.put("EsAnulada", this.esAnulada);
		
			

			if (this.lineas != null)
			{
				JSONArray jsonArray = new JSONArray();
				for (int i = 0; i < this.lineas.size(); ++i)
				{
					jsonArray.put(this.lineas.get(i).toJSON());
				}
				json.put("Lineas", jsonArray);
			}

			

			if (this.dameTotal != null)
			{
				json.put("DameTotal", this.dameTotal.toJSON());
			}
		}
		catch (JSONException e)
		{
			e.printStackTrace();
		}
		
		return json;
	}
	
	@Override 
	public IDTO toDTO ()
	{
		FacturaDTO dto = new FacturaDTO ();
		
		// Attributes
		
	dto.setId (this.getId());

		
	dto.setFecha (this.getFecha());

	dto.setEsPagada (this.getEsPagada());

	dto.setEsAnulada (this.getEsAnulada());

		
		
		// Roles
					// TODO: from DTOA [ Lineas ] (dataType : ArrayList<LineaFacturaDTOA>) to DTO [ LineaFactura ]
		
		
		return dto;
	}

	// endregion
}

	