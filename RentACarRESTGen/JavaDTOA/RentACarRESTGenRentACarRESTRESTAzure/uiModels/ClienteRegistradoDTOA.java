
package RentACarRESTGenRentACarRESTRESTAzure.uiModels.DTOA;

import RentACarRESTGenRentACarRESTRESTAzure.uiModels.DTO.*;
import RentACarRESTGenRentACarRESTRESTAzure.uiModels.DTO.utils.*;
import RentACarRESTGenRentACarRESTRESTAzure.uiModels.DTO.enumerations.*;

import java.util.ArrayList;

import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 * Code autogenerated. Do not modify this file.
 */
public class ClienteRegistradoDTOA extends DTOA
{
	// region - Members, getters and setters

	private String dNI;
	public String getDNI () { return dNI; }
	public void setDNI (String dNI) { this.dNI = dNI; }

	
	private String nombre;
	public String getNombre () { return nombre; }
	public void setNombre (String nombre) { this.nombre = nombre; }
	
	private String direccion;
	public String getDireccion () { return direccion; }
	public void setDireccion (String direccion) { this.direccion = direccion; }
	
	private String telefono;
	public String getTelefono () { return telefono; }
	public void setTelefono (String telefono) { this.telefono = telefono; }
	
	
	/* Rol: ClienteRegistrado o--> Factura */
	private ArrayList<FacturaDTOA> facturas;
	public ArrayList<FacturaDTOA> getFacturas () { return facturas; }
	public void setFacturas (ArrayList<FacturaDTOA> facturas) { this.facturas = facturas; }

	
	
	// endregion
	
	
	
	// region - Constructor and JSON <-> DTOA <-> DTO
	
	public ClienteRegistradoDTOA ()
	{
		// Empty constructor
	}
	
	@Override
	public void setFromJSON (JSONObject json)
	{
		try
		{
			if (!JSONObject.NULL.equals(json.opt("DNI")))
			{
				this.dNI = (String) json.opt("DNI");
			}
			

			if (!JSONObject.NULL.equals(json.opt("Nombre")))
			{
			 
				this.nombre = (String) json.opt("Nombre");
			 
			}

			if (!JSONObject.NULL.equals(json.opt("Direccion")))
			{
			 
				this.direccion = (String) json.opt("Direccion");
			 
			}

			if (!JSONObject.NULL.equals(json.opt("Telefono")))
			{
			 
				this.telefono = (String) json.opt("Telefono");
			 
			}
			

			JSONObject jsonFacturas = json.optJSONObject("Facturas");
			if (jsonFacturas != null)
			{
				FacturaDTOA tmp = new FacturaDTOA();
				tmp.setFromJSON(jsonFacturas);
				this.facturas = tmp;
			}

			
		}
		catch (Exception e)
		{
			e.printStackTrace();
		}
	}
	
	public JSONObject toJSON ()
	{
		JSONObject json = new JSONObject();
		
		try
		{
			if (this.dNI != null){
				json.put("DNI", this.dNI);
			}
			
		
		  if (this.nombre != null)
			json.put("Nombre", this.nombre);
		
		
		  if (this.direccion != null)
			json.put("Direccion", this.direccion);
		
		
		  if (this.telefono != null)
			json.put("Telefono", this.telefono);
		
			

			if (this.facturas != null)
			{
				json.put("Facturas", this.facturas.toJSON());
			}

			
		}
		catch (JSONException e)
		{
			e.printStackTrace();
		}
		
		return json;
	}
	
	@Override 
	public IDTO toDTO ()
	{
		ClienteDTO dto = new ClienteDTO ();
		
		// Attributes
		
	dto.setDNI (this.getDNI());

		
	dto.setNombre (this.getNombre());

	dto.setDireccion (this.getDireccion());

	dto.setTelefono (this.getTelefono());

		
		
		// Roles
					// TODO: from DTOA [ Facturas ] (dataType : ArrayList<FacturaDTOA>) to DTO [ Factura ]
		
		
		return dto;
	}

	// endregion
}

	